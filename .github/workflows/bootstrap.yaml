name: ACM and GitOps
on:
  workflow_dispatch:

jobs:
  Setup:
    name: Deploy ACM and GitOps
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          openshift-install: "${{ secrets.OCP_CLIENT_VERSION }}"
          oc: "${{ secrets.OCP_CLIENT_VERSION }}"

      - name: Download Artifacts from S3
        run: |
          aws s3 cp --recursive s3://${{ secrets.AWS_S3_BUCKET }}/ocp-artifact/ ocp-artifact/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Rollout ACM/GitOps Operators and Operands
        run: |
          cp ocp-artifact/auth/kubeconfig $GITHUB_WORKSPACE/kubeconfig
          export KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig

          oc apply -k gitops --kubeconfig=$GITHUB_WORKSPACE/kubeconfig || true

          echo "Waiting for ACM and GitOps Operators to be fully installed..."
          while ! oc get csv -n open-cluster-management | grep -q "Succeeded"; do
            echo "Still waiting for ACM CSV to be ready..."
            sleep 30
          done

          while ! oc get csv -n openshift-operators | grep -q "Succeeded"; do
            echo "Still waiting for GitOps CSV to be ready..."
            sleep 30
          done

          while true; do
            echo "Reapplying GitOps resources..."
            APPLY_OUTPUT=$(oc apply -k gitops --kubeconfig=$GITHUB_WORKSPACE/kubeconfig 2>&1)
            echo "$APPLY_OUTPUT"

            if ! echo "$APPLY_OUTPUT" | grep -q "not found"; then
              echo "✅ All resources applied successfully."
              break
            fi

            echo "❌ Found missing resources, retrying in 30s..."
            sleep 30
          done